{"componentChunkName":"component---src-templates-blog-post-js","path":"/e2e/cypress-commands/","result":{"data":{"site":{"siteMetadata":{"title":"Kontrolqa","author":"kostyrko","siteUrl":"https://kostyrko.github.io/kontrolqa","comment":{"disqusShortName":"","utterances":"kostyrko/kontrolqa"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"52ba41cd-28a9-5010-8c79-5b4cdecc53ca","excerpt":"Wprowadzenie Cypress jako taki zawiera różnego rodzaju komendy odpowiadający za konkretne przeprowadzanie testów mających wpływ na zachowanie się aplikacji, pozwala również na dodanie własnych komend tzw. custom commands - które nie są niczym innym niż funkcją które w łatwy…","html":"<p><img src=\"https://digital.ai/sites/default/files/pictures/styles/maxwidth_1920/public/blog-images//cypress-framework-1.jpg?itok=Iw9boVx6\"></p>\n<h3 id=\"wprowadzenie\" style=\"position:relative;\"><a href=\"#wprowadzenie\" aria-label=\"wprowadzenie permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wprowadzenie</h3>\n<p>Cypress jako taki zawiera różnego rodzaju komendy odpowiadający za konkretne przeprowadzanie testów mających wpływ na zachowanie się aplikacji, pozwala również na dodanie własnych komend tzw. <strong>custom commands</strong> - które nie są niczym innym niż funkcją które w łatwy sposób można łączyć z obiektami cypressowymi - to pozwala na zamknięcie pewnej powtarzalnej logiki/kodu, który można stosować w wielu miejscach.</p>\n<ul>\n<li>\n<p><code class=\"language-text\">overwrite</code> pozwala na nadpisanie funkcji już w cypressie zawartych =></p>\n<p>  Cypress.Commands.overwrite(‘visit’, (originalFn, url, options) => {\nreturn originalFn(url, {\n…options,\nonBeforeLoad(win) {\nwin.fetch = null;\n},\n});\n});</p>\n</li>\n</ul>\n<p>Po zainstalowaniu Cypressa w folderze <strong>support</strong> znaleźć można plik <strong>commands.js</strong> - ten musi być podlinkowany w <strong>index.js</strong> aby nasze komendy były importowane za każdym razem kiedy cypress jest odpalany.</p>\n<hr>\n<h4 id=\"przykładowe-komendy---commandsjs\" style=\"position:relative;\"><a href=\"#przyk%C5%82adowe-komendy---commandsjs\" aria-label=\"przykładowe komendy   commandsjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Przykładowe komendy - commands.js</h4>\n<p><strong>Wybranie n-tego dziecka</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Cypress.Commands.add('selectNth', { prevSubject: 'element' }, (subject, nth) => {\n  cy.wrap(subject)\n    .children('option')\n    .eq(nth)\n    .then(elem => {\n      cy.wrap(subject).select(elem.val())\n    })\n})</code></pre></div>\n<p>zastosowanie</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cy.get('#select').selectNth(2)</code></pre></div>\n<p><strong>Prosty generator tekstu</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const generateRandomText = () => Math.random().toString(36).substr(2, 10)\n\n\nCypress.Commands.add('fillWithRandomText', { prevSubject: 'element' }, subject =>\n  cy.wrap(subject).clear().type(generateRandomText()),\n)</code></pre></div>\n<p>analogicznie zastosowanie</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cy.get('#input').fillWithRandomText()</code></pre></div>\n<p>Do tej komendy <strong>sprawdzającej zawartość tekstu</strong> należy przekazać łańcuch znaków</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Cypress.Commands.add('checkTextContent', { prevSubject: 'element' }, (subject, contains: string) =>\n  cy\n    .wrap(subject)\n    .invoke('text')\n    .then(text => {\n      expect(text).to.contain(contains)\n    }),\n)\n\ncy.get('#input').checkTextContent('Hello World')</code></pre></div>\n<p>Ta komenda przyjmuje url w postaci łańcucha znaków oraz tablicę zawierającą obiekty, którymi request ma być stubbowany/ dto które mają być podstawione podczas kolejnych zapytań / założenie jest że w danym teście mamy testować reakcję aplikacji, obsługujących wiele zapytań tego samego typu, ale różnych zawartościach odpowiedzi na nie.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Cypress.Commands.add('multipleIntercepts', (url: string, responses: {}[]) => {\n  cy.intercept(url, req => {\n    req.reply(responses.shift())\n  })\n})</code></pre></div>\n<p>Źródła:</p>\n<p><a href=\"https://www.youtube.com/watch?v=66bEpdatEYQ&#x26;list=PLYDwWPRvXB8-8LG2hZv25HO6C3w_vezZb&#x26;index=12\">Create your OWN CYPRESS COMMAND NOW! | Cypress Tutorial For Beginners</a></p>\n<p><a href=\"https://www.testersbay.pl/post/custom-commands-co-to-i-jak-ich-u%C5%BCywa%C4%87\">Custom commands - co to i jak ich używać</a></p>","frontmatter":{"title":"Cypress - custom Commands","date":" 29/01/2022","tags":null}}},"pageContext":{"slug":"/e2e/cypress-commands/","previous":{"fields":{"slug":"/e2e/cypress-wprowadzenie-2/"},"frontmatter":{"title":"Cypress - wprowdzenie cz. 2"}},"next":{"fields":{"slug":"/e2e/cypress-dom/"},"frontmatter":{"title":"Cypress - przechodzenie pomiędzy elementami drzewa DOM"}}}}}