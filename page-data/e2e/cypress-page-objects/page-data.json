{"componentChunkName":"component---src-templates-blog-post-js","path":"/e2e/cypress-page-objects/","result":{"data":{"site":{"siteMetadata":{"title":"Controlqa 👾","author":"kostyrko","siteUrl":"https://kostyrko.github.io/kontrolqa","comment":{"disqusShortName":"","utterances":"kostyrko/kontrolqa"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"244e03c3-8d5b-572c-98de-7da7129bca87","excerpt":"Page Objects The Page Object pattern aims to introduce modularity in tests by separating the test logic into one place (the test file) and the actual page interaction logic into another place (the page object). The benefits of using the Page Object pattern include: 👉 Reducing…","html":"<p><img src=\"https://www.cypress.io/static/cypress-io-logo-social-share-8fb8a1db3cdc0b289fad927694ecb415.png\"></p>\n<h2 id=\"page-objects\" style=\"position:relative;\"><a href=\"#page-objects\" aria-label=\"page objects permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Objects</h2>\n<p>The <strong>Page Object pattern</strong> aims to introduce modularity in tests by separating the test logic into one place (the test file) and the actual page interaction logic into another place (the page object).</p>\n<p>The benefits of using the Page Object pattern include:</p>\n<p>👉 Reducing the usage of selectors in tests, which improves code readability.\n🤌 Making small changes to the tested application only affect the Page Object, avoiding changes in the test code.\n🤜 Simplifying test maintenance.</p>\n<p>In summary, the Page Object pattern:</p>\n<ul>\n<li>Introduces an additional level of abstraction for interacting with the UI.</li>\n<li>Contains the details of the page structure and its (partial) functionality within a single class/object.</li>\n</ul>\n<p>Page objects are typically stored in a dedicated folder (e.g., <code class=\"language-text\">pageObjects</code>) located outside the <code class=\"language-text\">integrations</code> folder, alongside other test code files.</p>\n<h3 id=\"1-class-based-page-object\" style=\"position:relative;\"><a href=\"#1-class-based-page-object\" aria-label=\"1 class based page object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Class-based Page Object</h3>\n<p>It is common to create Page Objects based on classes. However, in Cypress, it is not necessary to use classes for Page Objects (as mentioned below).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditsPgObj</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getCreditsCheckbox</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-cy=\"creditBox\"]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">getCreditsInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-cy=\"creditsInfo\"]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThanksCreditsPg</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getProviderName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-cy=\"providerName\"]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token function\">getTransactionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-cy=\"transactionId\"]'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Usage</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/// &lt;reference types=\"cypress\" /></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> viewports <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../support/main'</span>\n<span class=\"token comment\">// Import the page object class</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> CreditsPage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../../support/credits'</span>\n\nviewports<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">viewport</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Bonus credits management - (</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>viewport<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">)</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Create a new instance of the page object class</span>\n        <span class=\"token keyword\">const</span> creditsPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CreditsPgObj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">beforeEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            cy<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span>\n            cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@xyz'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@yz'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@zx'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Bonus credits offer should be displayed'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            CreditsPage<span class=\"token punctuation\">.</span><span class=\"token function\">getLimitedTimeOffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'be.visible'</span><span class=\"token punctuation\">)</span>\n            CreditsPage<span class=\"token punctuation\">.</span><span class=\"token function\">getCreditsProductBonus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'be.visible'</span><span class=\"token punctuation\">)</span>\n            CreditsPage<span class=\"token punctuation\">.</span><span class=\"token function\">getCreditsProductBonus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'include.text'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'100 Credits'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<p>Another example of using Page Objects can be found in Gleb Bahmutov’s article titled <a href=\"https://www.cypress.io/blog/2019/01/03/stop-using-page-objects-and-start-using-app-actions/#just-functions\">Stop using Page Objects and Start using App Actions</a>.</p>\n<p><strong>Page Object -> HomePage</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'./Headers'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SignInPage <span class=\"token keyword\">from</span> <span class=\"token string\">'./SignIn'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HomePage</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Header</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">getUserAvatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[data-testid=UserAvatar]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">goToSignIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> link <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span><span class=\"token function\">getSignInLink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> signIn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SignInPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> signIn<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HomePage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Usage in a test (notice where the assertions are located)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> HomePage <span class=\"token keyword\">from</span> <span class=\"token string\">'../elements/pages/HomePage'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sign In'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should show an error message on empty input'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> home <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HomePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        home<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> signIn <span class=\"token operator\">=</span> home<span class=\"token punctuation\">.</span><span class=\"token function\">goToSignIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        signIn<span class=\"token punctuation\">.</span><span class=\"token function\">submit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        signIn<span class=\"token punctuation\">.</span><span class=\"token function\">getEmailError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Email is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        signIn<span class=\"token punctuation\">.</span><span class=\"token function\">getPasswordError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exist'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Password is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"2-object-based-page-object\" style=\"position:relative;\"><a href=\"#2-object-based-page-object\" aria-label=\"2 object based page object permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Object-based Page Object</h3>\n<p>In Cypress, there is no need to create Page Objects as classes or instantiate them since they don’t require prototypes of other classes and don’t have to be classes themselves. Instead, Page Objects can be composed of individual functions or collected within an object for organization purposes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> menuPage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">menuOpen</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>menuSelectors<span class=\"token punctuation\">.</span>openMenuBtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">menuClose</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>menuSelectors<span class=\"token punctuation\">.</span>closMenuBtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'not.be.visible'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">logOut</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>menuSelectors<span class=\"token punctuation\">.</span>menuItems<span class=\"token punctuation\">.</span>logout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            cy<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'include'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h4 id=\"3-approach-to-logic-separation-in-page-object-model-pom\" style=\"position:relative;\"><a href=\"#3-approach-to-logic-separation-in-page-object-model-pom\" aria-label=\"3 approach to logic separation in page object model pom permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Approach to Logic Separation in Page Object Model (POM)</h4>\n<p>In the past, I wrote about good testing practices in <a href=\"https://kostyrko.github.io/zfrontu/testing-good-practices.html\">Good Testing Principles</a>, where I mentioned the 3A principle (Arrange, Act, Assert) and how it relates to the POM (Page Object Model). Here’s how I understand it:</p>\n<p>The Page Object is responsible for interacting with the page and stores reusable actions. However, the assertion (verification of action execution) should be placed inside the test itself. Test preparation can be done in different places and in different ways (excluding environment setup, such as <code class=\"language-text\">cy.visit</code> or <code class=\"language-text\">cy.intercept</code>, or <code class=\"language-text\">localStorage</code>, which can be set up in <code class=\"language-text\">beforeEach</code>). The focus should be on collecting selectors (in a separate class or object) that will be used both within the test and in the Page Object.</p>\n<p>A test scenario for testing a blog application may look like this: login, navigate to the section with new articles, create a new article content, submit it, and then verify if the article was added/published.</p>\n<p>A commonly used approach (linear approach) includes:</p>\n<ol>\n<li>Collecting selectors in an object (stored in the same file as the Page Object).</li>\n<li>Using the Page Object for <code class=\"language-text\">cy.get()</code> and other functionalities.</li>\n<li>Using getters from the Page Object in the test to create assertions.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">SELECTORS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">ACCEPT_BUTTON</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#accept-cookies\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">REJECT_BUTTON</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#reject-cookies\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">LOCALSTORAGE_DISABLED_WARNING</span><span class=\"token operator\">:</span> <span class=\"token string\">\"#localstorage-disabled-warning\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Translate given text: <strong>Alternative Approach: Splitting Logic into 3 Classes/Objects/Components (Functional Approach)</strong> => 1. Store getters = <code class=\"language-text\">cy.get()</code> + selectors. 2. Actions/Functionality (utilizes logic from 1.). 3. Test (uses logic from 1. and 2.).</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSubmitSearchButton</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[cypress-id]=submit-search'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Above is an example of a single function, but they can also be collected in objects/components (as mentioned earlier).</p>\n<p>Using <a href=\"https://anton-kravchenko.github.io/cypress-selectors/\">cypress-selectors</a>, the code can look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">@<span class=\"token function\">ByType</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">static</span> searchInput<span class=\"token operator\">:</span> Selector<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Sample Usage</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change language between different languages'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>i18nextLngs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">language</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span>footerPage<span class=\"token punctuation\">.</span><span class=\"token function\">changeLanguage</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i18nextLng'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span>i18nextLngs<span class=\"token punctuation\">[</span>language<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>where <code class=\"language-text\">footerPage.js</code> (in this case, selectors are stored in a separate file and object ‘footerSelectors’ as selectors, not getters, so it follows the linear approach):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> footerSelectors <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../support/selectors/footerSelectors'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> i18nextLngs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    en<span class=\"token operator\">:</span> <span class=\"token string\">'en'</span><span class=\"token punctuation\">,</span>\n    pl<span class=\"token operator\">:</span> <span class=\"token string\">'pl'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> footerPage <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">changeLanguage</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">language</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>footerSelectors<span class=\"token punctuation\">.</span>languageBtn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> waitForAnimations<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>footerSelectors<span class=\"token punctuation\">.</span>languageOption<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>language<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> language<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> waitForAnimations<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h3 id=\"page-object-model-how-about-using-app-actions-instead\" style=\"position:relative;\"><a href=\"#page-object-model-how-about-using-app-actions-instead\" aria-label=\"page object model how about using app actions instead permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Object model? How about using App Actions instead?</h3>\n<p>The article by <em>Gleb Bahmutov</em> titled <a href=\"https://www.cypress.io/blog/2019/01/03/stop-using-page-objects-and-start-using-app-actions/#just-functions\">Stop using Page Objects and Start using App Actions</a> has reached a significant number of people, but the actual adoption doesn’t seem to be widespread… - 🤔 In which cases do Page Objects not work or it would be considered best practice not to use them? 👉 They are not suitable when used for <strong>triggering application state changes through the UI</strong> / preparing the state for testing - why? - because it essentially means retesting the same thing. In such cases, App Actions can be used, which means using functions within the application/component directly in the test and then checking its state.</p>\n<hr>\n<p>Sources:</p>\n<p><a href=\"https://medium.com/geekculture/using-pageobject-pattern-with-cypress-6d9907850522\">Using PageObject pattern with Cypress</a> => <a href=\"https://github.com/anton-kravchenko/cypress-page-object-example\">anton-kravchenko/cypress-page-object-example</a> => <a href=\"https://anton-kravchenko.github.io/cypress-selectors/\">cypress-selectors</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=bC9bGHDgpQk&#x26;list=PLYDwWPRvXB8-8LG2hZv25HO6C3w_vezZb&#x26;index=15\">CYPRESS Page Object Model EXAMPLE | POM in CYPRESS</a></p>\n<p><a href=\"https://www.cypress.io/blog/2019/01/03/stop-using-page-objects-and-start-using-app-actions/\">Stop using Page Objects and Start using App Actions</a></p>","frontmatter":{"title":"🌲 Cypress - Page Object Model a short introduction","date":" 16/02/2022","tags":["cypress","test automation","e2e","pom"]}}},"pageContext":{"slug":"/e2e/cypress-page-objects/","previous":{"fields":{"slug":"/e2e/cypress-fixtures/"},"frontmatter":{"title":"🌲 Cypress - fixtures"}},"next":{"fields":{"slug":"/api/pactumjs-wprowadzenie/"},"frontmatter":{"title":"🤝 PactumJS - introduction"}}}}}