{"componentChunkName":"component---src-templates-blog-post-js","path":"/e2e/cypress-test-studio/","result":{"data":{"site":{"siteMetadata":{"title":"Controlqa üëæ","author":"kostyrko","siteUrl":"https://kostyrko.github.io/kontrolqa","comment":{"disqusShortName":"","utterances":"kostyrko/kontrolqa"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"f68427bd-9f21-580b-93fe-1a05efddade2","excerpt":"Introduction Cypress Test Studio is a tool (in Beta version at the time of writing this article) that allows creating tests in Cypress (in Open mode) without writing code. Since this feature is still in Beta, it is limited to a few functions (check, select, click, type, uncheck‚Ä¶","html":"<h2 id=\"introduction\" style=\"position:relative;\"><a href=\"#introduction\" aria-label=\"introduction permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Introduction</h2>\n<p><strong>Cypress Test Studio</strong> is a tool (in Beta version at the time of writing this article) that allows creating tests in Cypress (in Open mode) without writing code. Since this feature is still in Beta, it is limited to a few functions (check, select, click, type, uncheck) and a limited number of assertions.</p>\n<p>So, what can Cypress Test Studio be useful for and who can benefit from it?</p>\n<ul>\n<li>For beginners starting their journey with Cypress or end-to-end testing</li>\n<li>For quickly creating one-time tests before the MVP stage</li>\n<li>For practicing and getting familiar with the syntax of JavaScript/Cypress for those who haven‚Äôt had previous experience with Cypress and have no knowledge of JS</li>\n</ul>\n<p>However, at this stage of development, <strong>Cypress Test Studio</strong> may NOT be suitable for:</p>\n<ul>\n<li>Creating long-term or reusable tests</li>\n</ul>\n<hr>\n<h2 id=\"usage\" style=\"position:relative;\"><a href=\"#usage\" aria-label=\"usage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Usage</h2>\n<p>Install Cypress:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> cypress</code></pre></div>\n<p>Configure the ability to use <strong>Cypress Test Studio</strong> in the <code class=\"language-text\">cypress.json</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"experimentalStudio\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Create a file in the <code class=\"language-text\">integration</code> folder, e.g., <code class=\"language-text\">/cypress/integration/sample_spec.js</code>, and fill it with basic code. Then find your test in the Cypress Test Runner and run it:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example to-do app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should add a todo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://www.saucedemo.com/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>When you run the test initially, in the top right corner of the left test dock in the Cypress Test Runner, you will find a magic wand icon (tooltip: Add Commands to Test). Clicking on it will take you to the <strong>studio</strong> mode.</p>\n<p>Now, when you click in the browser in the right pane, you will notice that new commands appear under the ‚ÄúStudio Commands‚Äù header in the left dock where the tests are listed. This allows you to add additional commands to your test.</p>\n<p>Right-clicking on a specific field should expand a menu that allows you to add a basic assertion.</p>\n<p>After completing the test content, click <strong>Save commands</strong> (button).</p>\n<p>The test will run, and in the code of your test file, you will see new commands marked as <strong>Generated with Cypress Studio</strong>. These commands can serve as a starting point for further test improvements.</p>\n<p>Sources</p>\n<p><a href=\"https://docs.cypress.io/guides/core-concepts/cypress-studio#Overview\">cypress.io/cypress-studio</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=ado-aAAFe2o&#x26;ab_channel=BasaratCodes\">Introducing Cypress Studio - E2E web application testing</a></p>\n<p><a href=\"https://dev.to/leading-edje/record-a-cypress-test-with-cypress-studio-4npk\">Recording a Cypress Test with Cypress Studio</a></p>","frontmatter":{"title":"üå≤ Cypress - test studio","date":" 09/02/2022","tags":["cypress","test studio","experimental"]}}},"pageContext":{"slug":"/e2e/cypress-test-studio/","previous":{"fields":{"slug":"/e2e/cypress-intercept/"},"frontmatter":{"title":"üå≤ Cypress: cy.intercept() - catching HTTP requests üï∏Ô∏è"}},"next":{"fields":{"slug":"/e2e/cypress-fixtures/"},"frontmatter":{"title":"üå≤ Cypress - fixtures"}}}}}